/**
 * Produces a Latin Square of a given size.
 * By default, the returned latin square is balanced if the number of values is
 * an even number, but not completely balanced if it is an odd number. If you
 * need a Balanced Latin Square, set the `isAlwaysBalanced` parameter
 * to `true`.
 *
 * @param n The size of the latin square.
 * @param isAlwaysBalanced If true, the returned latin square will always be
 * balanced, but will be double the size if n is an odd number.
 * @returns The latin square.
 */
export default function latinSquare(n: number, isAlwaysBalanced?: boolean): number[][];
/**
 * Produces a Latin Square with the given values.
 * By default, the returned latin square is balanced if the number of values is
 * an even number, but not completely balanced if it is an odd number. If you
 * need a Balanced Latin Square, set the `isAlwaysBalanced` parameter
 * to `true`.
 *
 * @param treatments The values to be used in the latin square.
 * @param isAlwaysBalanced If true, the returned latin square will always be
 * balanced, but will be double the size if the number of values is an odd
 * number.
 * @returns The latin square.
 */
export default function latinSquare<Treatment>(treatments: Treatment[], isAlwaysBalanced?: boolean): Treatment[][];
